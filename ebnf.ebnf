
arrayExpression ::= '[' expression (',' expression)* ']';
primaryExpression ::= identifier | number | boolean | '(' expression ')' | arrayExpression

// TODO accept more params;
callExpression ::= identifier '(' expression ')' 

multiplicativeOperator ::= '*' | '/';
multiplicativeExpression ::= primaryExpression (multiplicativeOperator primaryExpression)*;

additiveOperator ::= '+' | '-';
additiveExpression ::= multiplicativeExpression (additiveOperator multiplicativeExpression)*;

expression ::= primaryExpression | additiveExpression;

expressionStatement ::= expression;
variableDeclarationStatement ::= 'let' identifier '=' expression;

statement ::= expressionStatement | variableDeclarationStatement;
program ::= statement*;